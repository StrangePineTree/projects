import pygame
import random
import pygame_menu
pygame.init()
pygame.mixer.init

doExit = False
clock = pygame.time.Clock()
p1x = 20
p1y = 200
p2y = 300
p2x = 660
choice = 0
choicea = 0

sus = 350
by = 350
bVx = 5
bVy = 5

num = 2
ggg = True
AI = False

p1Score = 0
p2Score = 0

bean = False
pressed = False
font = pygame.font.Font(None, 74)



#this will break the program if you dont have a sound file named this in the directory(original sound is the taco bell dong)
score1 = pygame.mixer.Sound("bell.mp3")

screen = pygame.display.set_mode((700, 500))
#main menue variables
mxpos = 0
mypos = 0
while choice == 0:
    
    event = pygame.event.wait()

    
    pygame.display.set_caption("Monguy games")
    screen.fill((0,0,15))
    
    mousePos = (mxpos, mypos)
    if event.type == pygame.MOUSEMOTION:
        mousePos = event.pos
        
    if event.type == pygame.MOUSEBUTTONDOWN:
        pressed = True

    if event.type == pygame.MOUSEBUTTONUP:
        pressed = False
        
    if mousePos[0] > 250 and mousePos[0] < 350 and mousePos[1] > 150 and mousePos[1] > 200 and pressed == True:
        choice = 1
    if mousePos[0] > 250 and mousePos[0] < 350 and mousePos[1] > 100 and mousePos[1] > 150 and pressed == True:
        choice = 1
        AI = True
# render -----------------------------------------------
    pygame.draw.rect(screen, (50,0,100), (250,200,100,50))
    pygame.draw.rect(screen, (40,0,120), (250,150,100,50))

    
    
    font = pygame.font.Font(None, 74)
    text = font.render("Monguy Games", 1, (150, 255, 255))
    screen.blit(text, (150,10))
    font = pygame.font.Font(None, 30)
    text = font.render("Pong", .1, (150, 255, 255))
    screen.blit(text, (273,213))
    text = font.render("1p Pong", .5, (150, 255, 255))
    screen.blit(text, (260,163))
    
    pygame.display.flip()
    
while choice == 1:
    clock.tick(60)
    
    boo = random.randrange(1,100)
    
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            doExit = True
    #logic - - - -
    keys = pygame.key.get_pressed()

    if AI == False:
        if keys[pygame.K_UP]:
            p2y-=6
        if keys[pygame.K_DOWN]:
            p2y+=6
        if keys[pygame.K_w]:
            p1y-=6
        if keys[pygame.K_s]:
            p1y+=6
    if keys[pygame.K_h] and keys[pygame.K_b]:
        bean = True
    if bean == True:
        if keys[pygame.K_a]:
            p1x-=7
        if keys[pygame.K_d]:
            p1x+=7
        if keys[pygame.K_RSHIFT]:
            ggg = False
        if keys[pygame.K_RETURN]:
            ggg = True
    if keys[pygame.K_r]:
        sus = 350
        by = 250
    if keys[pygame.K_u]:
        AI = True
    if keys[pygame.K_i]:
        AI = False
    if AI == True:
        if keys[pygame.K_UP] or keys[pygame.K_w]:
            p1y-=6
        if keys[pygame.K_DOWN]or keys[pygame.K_s]:
            p1y+=6
#AI stuff
    if AI == True:
        if (p2y + 50) >= by:
            p2y -= (random.randrange(4,6))
        if p2y + 50 < by:
            p2y += (random.randrange(4,6))
        
    #move the ball
    sus += bVx
    by += bVy
    
    #bounce ball against walls
    if sus < 0 or sus + 20 > 700:
        bVx *= -1.000
    if by < 0 or by + 20 > 500:
        bVy *= -1.000
    
    #paddle 0ne
    if ggg == True:
        if sus < p1x + 20 and by + 20 > p1y and by < p1y + 50 and sus > p1x:
            bVx = 5
            bVy = random.randrange(-6,-2)

        if sus < p1x + 20 and by + 20 > p1y and by < p1y + 100 and by >= p1y + 50 and sus > p1x:
            bVx = 5
            bVy = random.randrange(2,6)
#paddle 2
            # add if p2 ai > by move up/down ajnd stuff
    if AI == False:
        if sus+20 > p2x and by + 20 > p2y and by < p2y + 100:
            bVx = -5
            if by >= p2x + 50:
                bVy = random.randrange(-6,-2)
            else:
                bVy = random.randrange(2,6)
                    
    if AI == True:
        if sus+20 > p2x and by + 20 > p2y and by < p2y + 100:
            if boo > 50:
                bVy = random.randrange(2,6)
                bVx = -5 
            else:
                bVx = -5 
                bVy = random.randrange(-6,-2)
#addadswsw

    #following 2 statements use an audeo file
    if sus < 0:
        p2Score += 1
        score1.play()
    if sus > 680:
        p1Score += 1
        score1.play()
    #render - - - -
            
    screen.fill((0,0,15))
    pygame.draw.line(screen, (190,255,255), [349,0], [349,500],5)
    
    pygame.draw.rect(screen, (190, 255, 255), (p1x, p1y, 20, 100), 150)
    
    pygame.draw.rect(screen, (205, 255, 255), (p2x, p2y, 20, 100), 150)
    pygame.draw.rect(screen, (205, 255, 255), (sus, by, 20, 20), 150)
    

    font = pygame.font.Font(None, 74)
    text = font.render(str(p1Score), 1, (150, 255, 255))
    screen.blit(text, (250,10))
    text = font.render(str(p2Score), 1, (150,255,255))
    screen.blit(text, (420,10))

    pygame.display.flip()  
pygame.quit()

